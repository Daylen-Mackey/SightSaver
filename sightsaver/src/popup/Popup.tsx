import { useState, useEffect } from 'react'

import './Popup.css'

// 1 minute countdown
const startingCount = 1 * 60


export const Popup = () => {
  const [count, setCount] = useState(startingCount)
  const link = 'https://github.com/guocaoyi/create-chrome-ext'
  function logSyncStorage() {
    chrome.storage.sync.get('countdown', function(result) {
      console.log('Countdown value currently is ' + result.countdown + ' seconds');
      setCount(result.countdown);
    });
  }


  useEffect(() => {
    // Function to fetch countdown value from sync storage
    const fetchCountdown = () => {
      chrome.storage.sync.get('countdown', function(result) {
        setCount(result.countdown);
      });
    };

    // Fetch countdown initially
    fetchCountdown();

    // Setup interval to fetch countdown every second
    const intervalId = setInterval(fetchCountdown, 100);

    // Clean up interval on component unmount
    return () => clearInterval(intervalId);
  }, []); //


  const minus = () => {
    if (count > 0) setCount(count - 1)
  }

  const add = () => setCount(count + 1)

  useEffect(() => {
    chrome.storage.sync.get(['count'], (result) => {
      setCount(result.count || 0)
    })
  }, [])

  useEffect(() => {
    chrome.storage.sync.set({ count })
    chrome.runtime.sendMessage({ type: 'COUNT', count })
  }, [count])

  const openHomePage = () => {
    chrome.tabs.create({ url: chrome.runtime.getURL("options.html") });
  };


  return (
    <main>
      <h3>Sight Saver</h3>
      <h4>Every 20 minutes, you will receive a notification to practice the 20/20/20 rule</h4>
      <h5>Test</h5>
      <div className="calc">
        {/* <button onClick={minus} disabled={count <= 0}>
          -
        </button> */}
        <label>Time Remaining</label>
        {/* Display the count as Minutes:Seconds remaining */}
        <label>
          {Math.floor(count / 60).toString().padStart(2, '0')}:
          {(count % 60).toString().padStart(2, '0')}
        </label>
        {/* <button onClick={add}>+</button> */}
      </div>

      <button  onClick={openHomePage}>
        Open Full Homepage
      </button>
      {/* <a href={link} target="_blank">
        generated by create-chrome-ext
      </a> */}
    </main>
  )
}

export default Popup
